{"version":3,"sources":["Actions/createStream.js","Actions/withdrawStream.js","Actions/cancelStream.js","Stores/BalanceStore.js","Stores/StreamsStore.js","Stores/WalletStore.js","Stores/index.js","utils/helpers.js","Components/Recipient.js","Components/SelectToken.js","Contexts/FormContext.js","Components/DateTime.js","Components/Amount.js","Components/Curtain.js","Components/Stream/Badge.js","Components/Stream/ActionButton.js","Components/Stream/Duration.js","Components/Stream/Progress.js","Components/Stream.js","Components/Footer.js","Components/Logo.js","Components/ButtonPrimary.js","Components/Link.js","Components/Address.js","Components/Toggle.js","Components/CreateStreamForm.js","Components/Account.js","Components/SelectCluster.js","Components/Banner.js","Components/WalletPicker.js","Components/Vesting.js","Components/EmptyStreams.js","Components/StreamsList.js","Pages/Main.js","Pages/Products.js","logo.png","App.js","index.js","Stores/NetworkStore.js","Components/ToastrLink.js","Actions/sendTransaction.js","constants/ids.js","constants/index.js"],"names":["_createStream","data","connection","wallet","network","pda","a","instruction","getCreateStreamInstruction","publicKey","tx","Transaction","feePayer","add","sendTransaction","INSTRUCTION_CREATE_STREAM","pdaPub","sender","receiver","TransactionInstruction","keys","pubkey","PublicKey","isSigner","isWritable","SystemProgram","programId","useStore","getState","encodeInstructionData","amount","start","end","layout","BufferLayout","struct","u8","ns64","nu64","encoded","Buffer","alloc","span","encode","Math","trunc","LAMPORTS_PER_SOL","_withdrawStream","account_id","getWithdrawStreamInstruction","INSTRUCTION_WITHDRAW_STREAM","STREAMFLOW_ACCOUNT_ID","_cancelStream","getCancelStreamInstruction","INSTRUCTION_CANCEL_STREAM","useBalanceStore","set","balance","setBalance","useStreamStore","get","streams","addStream","id","stream","deleteStream","clearStreams","memoizedConnection","walletStore","walletType","clusterUrl","key","Connection","getConnection","setWalletType","state","name","persistStoreToLocalStorage","adapter","on","getBalance","then","result","toast","success","info","connect","catch","e","error","WalletNotFoundError","connectWallet","disconnectWallet","disconnect","localStorage","cluster","existingStreams","JSON","parse","walletKey","mergedStreams","toBase58","stringify","create","devtools","useNetworkStore","useWalletStore","window","addEventListener","property","blob","uint64","DataLayout","getDecodedAccountData","buffer","accountData","decode","Number","u64","fromBuffer","starttime","endtime","withdrawn","StreamData","recipient","now","STREAM_STATUS_SCHEDULED","STREAM_STATUS_STREAMING","STREAM_STATUS_COMPLETE","getStreamStatus","getUnixTime","Date","getExplorerLink","type","explorerUrl","status","canceled_at","this","STREAM_STATUS_CANCELED","_swal","swal","text","icon","buttons","copyToClipboard","value","el","document","createElement","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild","streamCreated","url","location","origin","button","title","content","element","attributes","className","href","target","innerHTML","clicked","Recipient","props","htmlFor","defaultValue","onChange","pattern","placeholder","required","SelectToken","disabled","FormContext","createContext","undefined","FormProvider","useState","setAmount","setReceiver","format","DATE_FORMAT","startDate","setStartDate","startTime","setStartTime","endDate","setEndDate","endTime","setEndTime","vesting","setVesting","Provider","children","useFormContext","useContext","DateTime","date","updateDate","time","updateTime","initializeTime","minutes","TIME_FORMAT","END","minEndDate","TIME_SUFFIX","min","max","years","onFocus","onClick","Amount","step","autoFocus","MAX_SAFE_INTEGER","Curtain","visible","Badge","color","fill","viewBox","cx","cy","r","ActionButton","action","Duration","fromUnixTime","memo","Progress","rtl","toFixed","width","Stream","myAddress","removeStream","onStatusUpdate","onCancel","onWithdraw","STREAM_STATUS_COLOR","getStreamed","streamed","setStreamed","available","setAvailable","showWithdraw","showCancel","useEffect","interval","setInterval","tmpStatus","updateStatus","clearInterval","Link","EXPLORER_TYPE_ADDR","Address","address","timestamp","Footer","src","alt","loading","transform","hideIcon","Logo","ButtonPrimary","rest","rel","iconClassName","copied","setCopied","setTimeout","classNames","classes","filter","Boolean","join","Toggle","enabled","label","setEnabled","Group","as","Label","checked","storeGetter","CreateStreamForm","setLoading","Keypair","generate","validate","msg","toDateString","setCustomValidity","createStream","form","getElementById","elements","checkValidity","reportValidity","getMinimumBalanceForRentExemption","fee","onSubmit","START","Vesting","connected","SelectCluster","WalletPicker","isMainnet","CLUSTER_MAINNET","Account","airdropTxSignature","setAirdropTxSignature","requestAirdrop","AIRDROP_AMOUNT","signature","confirmTransaction","TX_FINALITY_CONFIRMED","err","networkStore","setCluster","CLUSTER_DEVNET","Component","div","addWalletOption","p","img","onclick","setActionValue","cancel","close","walletInitialized","walletTypes","useMemo","getPhantomWallet","getSolflareWebWallet","getSolflareWallet","getSolletWallet","restoredWalletType","find","w","pickWallet","hidden","readOnly","EmptyStreams","StreamsContainer","newBalance","getAccountInfo","streamData","oldBalance","newWithdrawn","skipPrompt","savedStreams","newStreams","streamID","hash","substring","ERR_NO_STREAM","hasOwnProperty","pk","message","Object","length","entries","sort","stream1","map","withdrawStream","cancelStream","Main","Products","product","PRODUCT_STREAMS","PRODUCT_VESTING","PRODUCT_PAYROLL","floor","random","PRODUCT_MULTISIG","toLocaleString","App","setProduct","products","prod","logo","hideProgressBar","limit","ReactDOM","render","StrictMode","CLUSTER_LOCAL","CLUSTER_TESTNET","clusterUrls","clusterApiUrl","programIds","prompt","encodeURIComponent","ToastrLink","urlText","nonUrlText","transaction","getRecentBlockhash","recentBlockhash","blockhash","autoClose","partialSign","signTransaction","signed","sendRawTransaction","serialize","dismiss","finality","closeOnClick","console","warn"],"mappings":"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","file":"static/js/main.9f61eff3.chunk.js","sourcesContent":["import {\n    Connection,\n    Keypair,\n    LAMPORTS_PER_SOL,\n    PublicKey,\n    SystemProgram,\n    Transaction,\n    TransactionInstruction\n} from \"@solana/web3.js\";\nimport BufferLayout from \"buffer-layout\";\nimport {INSTRUCTION_CREATE_STREAM} from \"../constants\";\nimport {StreamData} from \"../utils/helpers\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport useStore from \"../Stores\"\n\nexport default async function _createStream(data: StreamData, connection: Connection, wallet: Wallet, network?: string, pda: Keypair) {\n    const instruction = getCreateStreamInstruction(data, pda.publicKey)\n    const tx = new Transaction({feePayer: wallet.publicKey}).add(instruction);\n    return await sendTransaction(INSTRUCTION_CREATE_STREAM, tx, connection, wallet, network, pda);\n}\n\nfunction getCreateStreamInstruction(data: StreamData, pdaPub: PublicKey): TransactionInstruction {\n    const {sender, receiver} = data;\n\n    return new TransactionInstruction({\n        keys: [{\n            pubkey: new PublicKey(sender),\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(receiver), //recipient\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: pdaPub, //PDA used for data\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: SystemProgram.programId, //system program required to make a transfer\n            isSigner: false,\n            isWritable: false\n        }],\n        programId: new PublicKey(useStore.getState().programId),\n        data: encodeInstructionData(data),\n    });\n}\n\n\nfunction encodeInstructionData(data: StreamData) {\n    const {amount, start, end} = data;\n    // Packed as little endian\n    const layout = BufferLayout.struct([\n        BufferLayout.u8(\"instruction\"),\n        BufferLayout.ns64(\"start\"),\n        BufferLayout.ns64(\"end\"),\n        // N.B. JS Number has 53 significant bits, so numbers larger than\n        // 2^53 can be misrepresented\n        BufferLayout.nu64(\"amount\")\n    ]);\n\n    const encoded = Buffer.alloc(layout.span);\n    layout.encode({\n            instruction: INSTRUCTION_CREATE_STREAM,\n            start: start,\n            end: end,\n            // amount: Number.MAX_SAFE_INTEGER // limited to 2^53 - 1 = 9007199254740991\n            amount: Math.trunc(amount * LAMPORTS_PER_SOL),\n        },\n        encoded\n    );\n\n    // UInt64 alternative is to remove the \"amount\" from layout encoding and\n    // use the following code:\n    // //encoded.writeBigUInt64LE(BigInt(\"18446744073709551615\"), 9)\n\n    return encoded;\n}\n","import BufferLayout from \"buffer-layout\";\nimport {INSTRUCTION_WITHDRAW_STREAM, STREAMFLOW_ACCOUNT_ID} from \"../constants\";\nimport {Connection, PublicKey, SystemProgram, Transaction, TransactionInstruction} from \"@solana/web3.js\";\nimport {StreamData} from \"../utils/helpers\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport useStore from \"../Stores\"\n\nexport default async function _withdrawStream(account_id: string, data: StreamData, connection: Connection, wallet: Wallet, network: string) {\n    const {receiver} = data;\n    const instruction = getWithdrawStreamInstruction(account_id, receiver)\n    const tx = new Transaction().add(instruction);\n    return await sendTransaction(INSTRUCTION_WITHDRAW_STREAM, tx, connection, wallet, network)\n}\n\nfunction getWithdrawStreamInstruction(account_id, receiver) {\n\n    return new TransactionInstruction({\n        keys: [{\n            pubkey: new PublicKey(receiver),\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(account_id),\n            isSigner: false,\n            isWritable: true\n        }, {\n            //needed to transfer the rent only during the final withdrawal transaction\n            pubkey: new PublicKey(STREAMFLOW_ACCOUNT_ID),\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: SystemProgram.programId,\n            isSigner: false,\n            isWritable: false\n        }],\n        programId: new PublicKey(useStore.getState().programId),\n        data: encodeInstructionData(),\n    });\n\n}\n\nfunction encodeInstructionData() {\n    const layout = BufferLayout.struct([\n        BufferLayout.u8(\"instruction\"),\n        BufferLayout.nu64(\"amount\")\n    ]);\n\n    const data = Buffer.alloc(layout.span);\n    //TODO - allow withdrawal of arbitrary (allowed) amount\n    layout.encode({\n            instruction: INSTRUCTION_WITHDRAW_STREAM,\n            amount: 0,// 0 = whole available amount is withdrawn.\n        },\n        data\n    );\n    return data;\n}\n","import BufferLayout from \"buffer-layout\";\nimport {INSTRUCTION_CANCEL_STREAM} from \"../constants\";\nimport {Connection, PublicKey, SystemProgram, Transaction, TransactionInstruction} from \"@solana/web3.js\";\nimport {StreamData} from \"../utils/helpers\";\nimport sendTransaction from \"./sendTransaction\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport useStore from \"../Stores\"\n\nexport default async function _cancelStream(account_id: string, data: StreamData, connection: Connection, wallet: Wallet, network: string) {\n    const {sender, receiver} = data;\n    const instruction = getCancelStreamInstruction(account_id, sender, receiver)\n    const tx = new Transaction().add(instruction);\n    return await sendTransaction(INSTRUCTION_CANCEL_STREAM, tx, connection, wallet, network)\n}\n\nfunction getCancelStreamInstruction(account_id, sender, receiver) {\n    return new TransactionInstruction({\n        keys: [{\n            pubkey: new PublicKey(sender),\n            isSigner: true,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(receiver),\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: new PublicKey(account_id),\n            isSigner: false,\n            isWritable: true\n        }, {\n            pubkey: SystemProgram.programId,\n            isSigner: false,\n            isWritable: false\n        }],\n        programId: new PublicKey(useStore.getState().programId),\n        data: encodeInstructionData(),\n    });\n\n}\n\nfunction encodeInstructionData() {\n    const layout = BufferLayout.struct([BufferLayout.u8(\"instruction\")]);\n    const data = Buffer.alloc(layout.span);\n\n    layout.encode({instruction: INSTRUCTION_CANCEL_STREAM}, data);\n\n    return data;\n}\n","const useBalanceStore = (set: Function) => ({\n    balance: 0,\n    setBalance: balance => set({balance})\n})\n\nexport default useBalanceStore","const useStreamStore = (set: Function, get: Function) => ({\n    streams: {},\n    addStream: (id: string, stream: Object) => set({streams: {...get().streams, [id]: stream}}),\n    deleteStream: (id: string) => {\n        const streams = {...get().streams}\n        delete streams[id]\n        set({streams})\n    },\n    clearStreams: () => set({streams: {}}),\n})\n\nexport default useStreamStore","import { Connection } from \"@solana/web3.js\"\nimport { toast } from \"react-toastify\"\nimport { WalletNotFoundError } from \"@solana/wallet-adapter-base\"\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\"\n\nlet memoizedConnection = {}\n\nconst getConnection = (clusterUrl: ?string) => {\n    if (!clusterUrl) {\n        return null\n    }\n    const key = clusterUrl\n    if (! memoizedConnection[key]) {\n        memoizedConnection = {[key]: new Connection(clusterUrl)}\n    }\n    return memoizedConnection[key]\n}\n\nconst walletStore = (set: Function, get: Function) => ({\n    // state\n    walletType: null,\n    wallet: null,\n    connection: () => getConnection(get().clusterUrl()),\n\n    // actions\n    setWalletType: (walletType: ?Object) => {\n        const state = get()\n        if (walletType?.name === state.walletType?.name) {\n            return\n        }\n        state.persistStoreToLocalStorage()\n\n        const wallet = walletType?.adapter()\n        if (wallet) {\n            wallet.on('connect', () => {\n                set({walletType, wallet})\n                state.connection().getBalance(wallet.publicKey).then(result => state.setBalance(result / LAMPORTS_PER_SOL))\n                toast.success('Connected to wallet!')\n            })\n            wallet.on('disconnect', () => {\n                set({walletType: null, wallet: null})\n                toast.info('Disconnected from wallet')\n            })\n            wallet.connect().catch(e => {\n                set({walletType: null, wallet: null})\n                toast.error(e instanceof WalletNotFoundError ? 'Wallet extension not installed' : 'Wallet not connected, try again')\n            })\n        }\n        else {\n            set({walletType, wallet})\n        }\n    },\n    connectWallet: () => get().wallet?.connect()\n        .catch((e) => {\n            get().setWalletType(null)\n            toast.error(e instanceof WalletNotFoundError ? 'Wallet extension not installed' : 'Wallet not connected, please try again')\n        }),\n    disconnectWallet: () => {\n        const state = get()\n        // state.persistStoreToLocalStorage()\n        state.wallet?.disconnect()\n    },\n})\n\nexport default walletStore","import create from 'zustand'\nimport { devtools } from 'zustand/middleware'\nimport useBalanceStore from './BalanceStore'\nimport useNetworkStore from './NetworkStore'\nimport useStreamStore from './StreamsStore'\nimport useWalletStore from './WalletStore'\n\nconst persistStoreToLocalStorage = () => {\n    const state = useStore.getState()\n    localStorage.cluster = state.cluster\n    localStorage.programId = state.programId\n    localStorage.walletType = state.walletType?.name\n\n    const existingStreams = JSON.parse(localStorage.streams || '{}')\n    const walletKey = state.wallet?.publicKey\n    if (walletKey) {\n        // put current streams in localStorage without overwriting\n        // the exiting ones in other wallets or clusters\n        // localStorage.streams[state.cluster][walletKey] = state.streams\n        const mergedStreams = {\n            ...existingStreams,\n            [state.cluster]: {\n                ...existingStreams[state.cluster],\n                [walletKey.toBase58()]: state.streams\n            }\n        }\n        localStorage.streams = JSON.stringify(mergedStreams)\n    }\n}\n\nconst useStore = create(devtools((set, get) => ({\n    ...useBalanceStore(set, get),\n    ...useNetworkStore(set, get),\n    ...useStreamStore(set, get),\n    ...useWalletStore(set, get),\n    persistStoreToLocalStorage,\n})))\n\nwindow.addEventListener(\"beforeunload\", persistStoreToLocalStorage)\n\nexport default useStore","import {\n    STREAM_STATUS_CANCELED,\n    STREAM_STATUS_COMPLETE,\n    STREAM_STATUS_SCHEDULED,\n    STREAM_STATUS_STREAMING\n} from \"../constants\";\nimport BufferLayout from \"buffer-layout\";\nimport {LAMPORTS_PER_SOL, PublicKey} from \"@solana/web3.js\";\nimport {u64} from \"@solana/spl-token\";\nimport {getUnixTime} from \"date-fns\";\nimport swal from \"sweetalert\";\nimport {Buffer} from 'buffer/';\nimport useStore from \"../Stores\"\n\nexport const publicKey = (property = \"publicKey\"): BufferLayout.Layout => {\n    return BufferLayout.blob(32, property);\n};\n\nexport const uint64 = (property = \"uint64\"): BufferLayout.Layout => {\n    return BufferLayout.blob(8, property);\n};\n\nconst DataLayout = BufferLayout.struct([\n    uint64(\"starttime\"),\n    uint64(\"endtime\"),\n    uint64(\"amount\"),\n    uint64(\"withdrawn\"),\n    publicKey(\"sender\"),\n    publicKey(\"recipient\"),\n]);\n\nexport function getDecodedAccountData(buffer: Buffer) {\n    const accountData = DataLayout.decode(buffer);\n\n    const start = Number(u64.fromBuffer(accountData.starttime));\n    const end = Number(u64.fromBuffer(accountData.endtime));\n    const amount = Number(u64.fromBuffer(accountData.amount)) / LAMPORTS_PER_SOL;\n    const withdrawn = Number(u64.fromBuffer(accountData.withdrawn)) / LAMPORTS_PER_SOL;\n    const sender = (new PublicKey(accountData.sender)).toBase58();\n    const recipient = (new PublicKey(accountData.recipient)).toBase58();\n\n    const status = getStreamStatus(Number(start), Number(end), getUnixTime(new Date())) //in milliseconds\n\n    return new StreamData(sender, recipient, amount, start, end, withdrawn, status);\n}\n\nexport function getExplorerLink(type: string, id: string): string {\n    return `https://explorer.solana.com/${type}/${id}?cluster=${useStore.getState().explorerUrl()}`;\n}\n\nexport function getStreamStatus(start: number, end: number, now: number) {\n    if (now < start) {\n        return STREAM_STATUS_SCHEDULED\n    } else if (now < end) {\n        return STREAM_STATUS_STREAMING\n    } else {\n        return STREAM_STATUS_COMPLETE\n    }\n}\n\nexport function StreamData(sender: string, receiver: string, amount: number, start: number, end: number, withdrawn?: number, status?: string, canceled_at: number) {\n    this.sender = sender;\n    this.receiver = receiver;\n    this.amount = amount;\n    this.start = start;\n    this.end = end;\n    this.withdrawn = withdrawn || 0;\n    this.status = canceled_at ? STREAM_STATUS_CANCELED : (status || STREAM_STATUS_SCHEDULED);\n    this.canceled_at = canceled_at;\n}\n\nexport function _swal(): Promise {\n    return swal({text: \"Are you sure?\", icon: \"warning\", buttons: true})\n}\n\nexport function copyToClipboard(value): void {\n    const el = document.createElement('textarea');\n    el.value = value;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n}\n\nexport function streamCreated(id: string) {\n    const url = window.location.origin + \"#\" + id;\n    swal({\n        button: \"Copy Stream URL\",\n        icon: 'success',\n        title: \"Stream created!\",\n        //sweet alert accepts pure HTML Node, so some wrapping must be done https://sweetalert.js.org/guides/#using-dom-nodes-as-content\n        content:\n            {\n                element: \"a\",\n                attributes: {\n                    className: \"text-primary block truncate max-w-full\",\n                    href: url,\n                    target: \"_blank\",\n                    innerHTML: url\n                }\n            }\n    }).then((clicked) => {\n        if (clicked) {\n            copyToClipboard(url);\n            swal(\"Link copied to clipboard!\", \"Send it to the recipient!\", \"success\")\n        }\n    })\n}\n","export default function Recipient(props: { onChange: void, value: string }) {\n    return (\n        <div className=\"col-span-full\">\n            <label htmlFor=\"account\" className=\"block font-medium text-gray-100\">\n                Recipient Account\n            </label>\n            <div className=\"mt-1\">\n                <input\n                    type=\"text\"\n                    name=\"account\"\n                    id=\"account\"\n                    defaultValue={props.value}\n                    onChange={e => props.onChange(e.target.value)}\n                    pattern=\"[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}\"\n                    className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                    placeholder=\"Please double check the address\"\n                    aria-describedby=\"account-description\"\n                    required\n                />\n            </div>\n        </div>\n    )\n}","export default function SelectToken() {\n    return (\n        <div className=\"col-span-2 sm:col-span-1\">\n            <label htmlFor=\"token\" className=\"block font-medium text-gray-100\">\n                Token\n            </label>\n            <select\n                id=\"token\"\n                name=\"token\"\n                className=\"mt-1 text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"                defaultValue=\"SOL\"\n            >\n                <option>SOL</option>\n                <option disabled>FYFY - Coming soon️™</option>\n                <option disabled>ETH - Coming soon️™</option>\n                <option disabled>BTC - Coming soon™</option>\n                <option disabled>USDC - Coming soon™</option>\n                <option disabled>Other tokens...</option>\n            </select>\n        </div>\n    )\n}\n","import {format} from \"date-fns\";\nimport {createContext, useContext, useState} from \"react\";\nimport {DATE_FORMAT} from \"../constants\";\n\nconst FormContext = createContext(undefined)\n\nexport function FormProvider(props) {\n    const now = new Date();\n\n    const [amount, setAmount] = useState(undefined);\n    const [receiver, setReceiver] = useState(undefined);\n    const [startDate, setStartDate] = useState(format(now, DATE_FORMAT));\n    const [startTime, setStartTime] = useState(\"\");\n    const [endDate, setEndDate] = useState(startDate);\n    const [endTime, setEndTime] = useState(\"\");\n    const [vesting, setVesting] = useState(false);\n\n    return <FormContext.Provider value={{\n        amount,\n        setAmount,\n        receiver,\n        setReceiver,\n        startDate,\n        setStartDate,\n        startTime,\n        setStartTime,\n        endDate,\n        setEndDate,\n        endTime,\n        setEndTime,\n        vesting,\n        setVesting\n    }}>{props.children}</FormContext.Provider>\n}\n\nexport function useFormContext() {\n    return useContext(FormContext)\n}","import {add, format} from \"date-fns\";\nimport {DATE_FORMAT, END, TIME_FORMAT, TIME_SUFFIX} from \"../constants\";\nimport {Dispatch, SetStateAction} from \"react\";\nimport {useFormContext} from \"../Contexts/FormContext\";\n\nexport default function DateTime(props: { title: string, date: string, updateDate: Dispatch<SetStateAction<string>>, time: string, updateTime: Dispatch<SetStateAction<string>> }) {\n    const {title, date, updateDate, time, updateTime} = props;\n    const {startDate, startTime} = useFormContext();\n\n    function getMinDate(): string {\n        if (title === END && startDate) {\n            return format(new Date(startDate + TIME_SUFFIX), DATE_FORMAT);\n        } else {\n            return format(new Date(), DATE_FORMAT);\n        }\n    }\n\n    function initializeTime() {\n        const now = format(add(new Date(), {minutes: 1}), TIME_FORMAT);\n\n        if (title === END) {\n            const minEndDate = startDate ? (new Date(startDate + TIME_SUFFIX)) : (new Date())\n\n            if (!startDate || !date || date < startDate) {\n                updateDate(format(minEndDate, DATE_FORMAT))\n            }\n\n            if (startDate && startDate === date && time <= startTime) {\n                updateTime(format(add(new Date(startDate + 'T' + startTime), {minutes: 5}), TIME_FORMAT));\n            } else if (!startTime) {\n                updateTime(now)\n            }\n        } else if (!time || time < now) {\n            updateTime(now)\n        }\n    }\n\n    return (\n        <>\n            <div className=\"col-span-3 sm:col-span-1\">\n                <label htmlFor={title}\n                       className=\"block font-medium text-gray-100 capitalize\">{title} Date</label>\n                <div className=\"mt-1\">\n                    <input type=\"date\" name={title} id={title}\n                           value={date}\n                           min={getMinDate()}\n                           max={format(add(new Date(), {years: 1}), DATE_FORMAT)}\n                           onFocus={initializeTime}\n                           onClick={initializeTime}\n                           onChange={e => updateDate(e.target.value)}\n                           className=\"text-white bg-gray-800 border-primary block w-full h-10.5 border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                           placeholder=\"\" aria-describedby={title + `-description`} required/>\n                </div>\n            </div>\n            <div className=\"col-span-2 sm:col-span-1\">\n                <label htmlFor={title + `_time`}\n                       className=\"block font-medium text-gray-100 capitalize\">{title} time</label>\n                <div className=\"mt-1\">\n                    <input type=\"time\" name={title + `_time`} id={title + `_time`}\n                           value={time}\n                           onFocus={initializeTime}\n                           onClick={initializeTime}\n                           onChange={e => updateTime(e.target.value)}\n                           className=\"text-white bg-gray-800 border-primary block w-full h-10.5 border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                           placeholder=\"\" aria-describedby={title + `_time-description`} required/>\n                </div>\n            </div>\n        </>\n    )\n}","export default function Amount(props: { onChange: void, max: number, value: number }) {\n    return (\n        <div className=\"col-span-3 sm:col-span-1\">\n            <label htmlFor=\"amount\" className=\"block font-medium text-gray-100\">\n                Amount\n            </label>\n            <div className=\"mt-1\">\n                <input\n                    step=\"any\"\n                    autoFocus={true}\n                    type=\"number\"\n                    name=\"amount\"\n                    id=\"amount\"\n                    defaultValue={props.value}\n                    onChange={e => props.onChange(e.target.value)}\n                    className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                    min={0}\n                    max={props.max || Number.MAX_SAFE_INTEGER}\n                    placeholder=\"0.00\"\n                    aria-describedby=\"amount-description\"\n                    required={true}\n                />\n            </div>\n        </div>\n    )\n}\n","export default function Curtain(props: { visible: boolean }) {\n    return (\n        <div className={`fixed top-0 bottom-0 left-0 right-0 bg-gray-900 opacity-90 z-10 ${props.visible ? \"block\" : \"hidden\"}`}>\n            <div className=\"loader\"> </div>\n        </div>\n    )\n}","export default function Badge(props: { type: string, color: string }) {\n    const {type, color } = props;\n    return <div className=\"inline\">\n        <span\n            className={`align-top px-2.5 py-0.5 rounded-full text-xs font-medium bg-${color}-100 text-${color}-800 capitalize`}>\n            <svg className={`mr-1 -ml-1 inline align-baseline h-2 w-2 text-${color}-400`} fill=\"currentColor\" viewBox=\"0 0 8 8\">\n              <circle cx={4} cy={4} r={3}/>\n            </svg>\n            {type}\n      </span></div>\n}","export default function ActionButton(props: { title: string, action: void, color: string }) {\n    const {title, action, color} = props;\n\n    return (\n        <button onClick={action}\n                className={`rounded-md text-sm bg-${color}-500 hover:bg-${color}-700 active:bg-${color}-900 text-white py-1 px-2`}>\n            {title}\n        </button>\n    )\n}","import {memo} from 'react'\nimport {format, fromUnixTime} from \"date-fns\";\n\nfunction Duration(props: { start: number, end: number }) {\n    return (\n        <dt className=\"col-span-full text-center\">\n            {(format(fromUnixTime(props.start), \"yyyy-MM-dd HH:mm\"))} &ndash; {(format(fromUnixTime(props.end), \"yyyy-MM-dd HH:mm\"))}\n        </dt>\n    )\n}\n\nexport default memo(Duration);","export default function Progress(props: { title: string, value: number, max: number, rtl?: boolean }) {\n    let {title, value, max, rtl} = props;\n    value = Number(value).toFixed(2);\n    max = Number(max).toFixed(2);\n    return (\n        <>\n            <dt>{title}</dt>\n            <div className=\"rounded-sm h-3 bg-gray-900 w-full my-auto\">\n                <div\n                    className={\"max-w-full bg-gradient-to-r from-primary to-secondary rounded-sm h-full \" + (rtl ? \"float-right\" : \"\")}\n                    style={{width: value / max * 100 + \"%\"}}>\n                </div>\n            </div>\n            <label className=\"ml-2 text-right truncate\">◎{value}<small className=\"text-gray-400\">/{max}</small></label>\n        </>\n    )\n}","import Badge from \"./Stream/Badge\";\nimport ActionButton from \"./Stream/ActionButton\";\nimport {getUnixTime} from \"date-fns\";\nimport Duration from \"./Stream/Duration\";\nimport Progress from \"./Stream/Progress\";\nimport {useEffect, useState} from \"react\";\nimport {StreamData, getExplorerLink} from \"../utils/helpers\";\nimport {XIcon} from \"@heroicons/react/outline\";\nimport {\n    EXPLORER_TYPE_ADDR,\n    STREAM_STATUS_CANCELED,\n    STREAM_STATUS_COLOR,\n    STREAM_STATUS_COMPLETE,\n    STREAM_STATUS_SCHEDULED,\n    STREAM_STATUS_STREAMING\n} from \"../constants\";\nimport {Address, Link} from \"./index\";\n\nexport default function Stream(props: { data: StreamData, myAddress: string, id: string, removeStream: void, onStatusUpdate: void, onCancel: void, onWithdraw: void }) {\n    const {start, end, withdrawn, amount, receiver, sender, status} = props.data;\n    const {myAddress, removeStream, onStatusUpdate, onCancel, onWithdraw, id} = props;\n\n    const color = STREAM_STATUS_COLOR[status];\n\n    const [streamed, setStreamed] = useState(getStreamed(start, end, amount))\n    const [available, setAvailable] = useState(streamed - withdrawn);\n\n    const showWithdraw = ((status === STREAM_STATUS_STREAMING || (status === STREAM_STATUS_COMPLETE && withdrawn < amount)) && myAddress === receiver);\n    const showCancel = (status === STREAM_STATUS_STREAMING || status === STREAM_STATUS_SCHEDULED) && myAddress === sender\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setStreamed(getStreamed(start, end, amount));\n            setAvailable(streamed - withdrawn);\n            const tmpStatus = updateStatus(status, start, end);\n            if (tmpStatus !== status) {\n                onStatusUpdate(tmpStatus)\n            }\n        }, 1000)\n        return () => clearInterval(interval);\n    });\n\n    return (\n        <dl className={`text-white my-4 grid gap-y-4 gap-x-2 grid-cols-3 p-4 bg-${color}-300 bg-opacity-10 hover:bg-opacity-20 shadow rounded-lg`}>\n            <div className=\"col-span-full\">\n                <Badge className=\"inline\" type={status} color={color}/>\n                <button onClick={removeStream}\n                        className={`p-1.5 h-6 w-6 float-right align-top rounded-sm hover:bg-${color}-100 focus:outline-none focus:ring-1`}>\n                    <XIcon className=\"float-right w-3 h-3\"/>\n                </button>\n            </div>\n            <Duration start={start} end={end}/>\n            <Link url={getExplorerLink(EXPLORER_TYPE_ADDR, id)} title={\"ID\"}/>\n            <Address address={id} className=\"col-span-2 text-sm text-gray-400\"/>\n            <Link url={getExplorerLink(EXPLORER_TYPE_ADDR, receiver)} title={\"Recipient\"}/>\n            <Address address={receiver} className=\"col-span-2 text-sm text-gray-400\"/>\n            <Progress title=\"Withdrawn\" value={withdrawn} max={amount}/>\n            {status === STREAM_STATUS_CANCELED &&\n            <Progress title=\"Returned\" value={amount - withdrawn} max={amount} rtl={true}/>}\n            {status !== STREAM_STATUS_CANCELED &&\n            <>\n                <Progress title=\"Streamed\" value={streamed} max={amount}/>\n                {showWithdraw &&\n                (<>\n                    <dt>Available<br/>\n                        <sup className=\"text-xs text-gray-300 align-top\">for withdrawal</sup></dt>\n                    <dd className=\"col-span-2\">◎{available.toFixed(2)}</dd>\n                    <ActionButton title=\"Withdraw\" action={onWithdraw}\n                                  color={STREAM_STATUS_COLOR[STREAM_STATUS_STREAMING]}/>\n                </>)}\n                {showCancel && <ActionButton title={\"Cancel\"} action={onCancel}\n                                             color={STREAM_STATUS_COLOR[STREAM_STATUS_CANCELED]}/>}\n            </>}\n        </dl>\n    )\n}\n\nexport function getStreamed(start: number, end: number, amount: number, timestamp?: number) {\n    timestamp = timestamp || getUnixTime(new Date());\n\n    if (timestamp < start) return 0\n    if (timestamp > end) return amount;\n\n    return (timestamp - start) / (end - start) * amount;\n}\n\nfunction updateStatus(status: string, start: number, end: number) {\n    const now = getUnixTime(new Date());\n    if (status === STREAM_STATUS_SCHEDULED && now >= start) {\n        return STREAM_STATUS_STREAMING;\n    } else if (status === STREAM_STATUS_STREAMING && now >= end) {\n        return STREAM_STATUS_COMPLETE;\n    } else {\n        return status;\n    }\n}\n","import {Link} from \"./index\";\n\nexport default function Footer() {\n    return (<footer className=\"mt-40 mb-4 text-center text-sm font-mono text-gray-400\">\n        <div className=\"max-w-40 inline-block\">\n            <img src=\"https://solana.com/branding/horizontal/logo-horizontal-gradient-dark.png\"\n                 className=\"h-8 mx-auto my-2\" alt=\"Solana logo\" loading=\"lazy\"/>\n        </div>\n        <div className=\"max-w-42 inline-block ml-6\">\n            <img src=\"img/serum-logo-white.svg\" className=\"h-10 mx-auto mb-1\" alt=\"Project Serum logo\" loading=\"lazy\"/>\n        </div>\n        <small className=\"block mt-4\">\n            Copyleft <span className=\"inline-block\" style={{transform: \"rotate(180deg)\"}}>&copy;</span> 2021, <Link url=\"https://fyfy.finance\" title=\"Fyfy Finance\" hideIcon={true}/><br/>\n            <small>Code available under <Link url=\"https://www.gnu.org/licenses/agpl-3.0.en.html\" title=\"AGPLv3\" hideIcon={true}/></small>\n        </small>\n    </footer>)\n}","export default function Logo(props: {src: string}){\n    return (\n        <div className=\"mb-8 text-white\">\n            <img src={props.src} alt=\"Fyfy Finance logo\" className=\"w-24 mx-auto\"/>\n            <h1 className=\"text-6xl text-center\">Fyfy<strong>Finance</strong></h1>\n        </div>\n    )\n}","export default function ButtonPrimary({children, className, ...rest}) {\n    const baseClasses = \"block mx-auto px-8 py-4 bg-gradient-to-br from-primary via-primary to-secondary border-transparent font-medium rounded shadow-sm text-white hover:opacity-90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary \"\n    return (\n        <button className={baseClasses + className} {...rest}>\n            {children}\n        </button>\n    )\n}\n","import {ExternalLinkIcon} from \"@heroicons/react/outline\";\n\nexport default function Link(props: { url: string, title?: string, className?: string, hideIcon?: boolean}) {\n    const {url, title, className, hideIcon} = props;\n    const icon = hideIcon || <sup><ExternalLinkIcon className=\"w-3 h-3 inline\"/></sup>\n\n    return (\n        <strong className={\"text-gray-300 hover:text-white \" + className}>\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                {title || url} {icon}\n            </a>\n        </strong>\n    )\n}","import {copyToClipboard} from \"../utils/helpers\";\nimport {DuplicateIcon, CheckIcon} from \"@heroicons/react/outline\";\nimport {useState} from \"react\";\n\nexport default function Address(props: { address: string, className: string }) {\n    const {address, className} = props;\n    const iconClassName = \"h-4 inline mr-1 cursor-pointer hover:opacity-80 align-text-bottom \";\n    const [copied, setCopied] = useState(false)\n\n    function copy() {\n        copyToClipboard(address);\n        setCopied(true);\n        setTimeout(() => {\n            setCopied(false)\n        }, 1000)\n    }\n\n    return (\n        <span className={\"block truncate \" + className}>\n            {copied\n                ? (<span className=\"text-blue-300 mr-1\"><CheckIcon className={iconClassName}/><small>Copied!</small></span>)\n                : <DuplicateIcon className={iconClassName} onClick={copy}/>}\n            {address}</span>\n    )\n}\n\n\n","/* This example requires Tailwind CSS v2.0+ */\nimport {Dispatch, SetStateAction} from 'react'\nimport {Switch} from '@headlessui/react'\n\nfunction classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n}\n\nexport default function Toggle({enabled, label, setEnabled}: { enabled: boolean, label: string, setEnabled: Dispatch<SetStateAction<boolean>> }) {\n    return (\n        <Switch.Group as=\"div\" className=\"flex items-center\">\n            <Switch.Label as=\"span\" className=\"mr-3\">\n                <span className=\"text-white\">{label}</span>\n            </Switch.Label>\n            <Switch\n                checked={enabled}\n                onChange={setEnabled}\n                className={classNames(\n                    enabled ? 'bg-primary' : 'bg-gray-900',\n                    'relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 ring-1 ring-primary focus:outline-none focus:ring-2 focus:ring-secondary'\n                )}\n            >\n        <span\n            aria-hidden=\"true\"\n            className={classNames(\n                enabled ? 'translate-x-5' : 'translate-x-0',\n                'pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200'\n            )}\n        />\n            </Switch>\n        </Switch.Group>\n    )\n}\n","import {Amount, ButtonPrimary, DateTime, Recipient, SelectCluster, SelectToken, Vesting, WalletPicker} from \"./index\";\nimport {useFormContext} from \"../Contexts/FormContext\";\nimport {getUnixTime} from \"date-fns\";\nimport {streamCreated, StreamData} from \"../utils/helpers\";\nimport {_createStream} from \"../Actions\";\nimport {Keypair, LAMPORTS_PER_SOL} from \"@solana/web3.js\";\nimport {END, START, TIME_SUFFIX} from \"../constants\";\nimport {Dispatch, SetStateAction} from \"react\";\nimport useStore from \"../Stores\"\nimport Toggle from \"./Toggle\";\n\nconst storeGetter = state => ({\n    balance: state.balance,\n    setBalance: state.setBalance,\n    addStream: state.addStream,\n    connection: state.connection(),\n    wallet: state.wallet,\n})\n\nexport default function CreateStreamForm({\n                                             loading,\n                                             setLoading\n                                         }: { loading: boolean, setLoading: Dispatch<SetStateAction<boolean>> }) {\n    const pda = Keypair.generate();\n    const {\n        amount,\n        setAmount,\n        receiver,\n        setReceiver,\n        startDate,\n        setStartDate,\n        startTime,\n        setStartTime,\n        endDate,\n        setEndDate,\n        endTime,\n        setEndTime,\n        vesting,\n        setVesting\n    } = useFormContext()\n\n    const {connection, wallet, balance, setBalance, addStream, cluster} = useStore(storeGetter)\n\n    function validate(element) {\n        const {name, value} = element;\n        let start;\n        let msg = '';\n        switch (name) {\n            case \"start\":\n                start = new Date(value + TIME_SUFFIX)\n                const now = new Date(new Date().toDateString())\n                msg = start < now ? \"Cannot start the stream in the past.\" : \"\";\n                break;\n            case \"start_time\":\n                start = new Date(startDate + \"T\" + value);\n                msg = start < new Date() ? \"Cannot start the stream in the past.\" : \"\";\n                break;\n            case \"end\":\n                msg = new Date(value + TIME_SUFFIX) < new Date(startDate + TIME_SUFFIX) ? \"Umm... end date before the start date?\" : \"\";\n                break;\n            case \"end_time\":\n                start = new Date(startDate + \"T\" + startTime);\n                const end = new Date(endDate + \"T\" + value);\n                msg = end < start ? \"Err... end time before the start time?\" : \"\";\n                break;\n            default:\n        }\n        element.setCustomValidity(msg);\n    }\n\n    async function createStream() {\n        const form = document.getElementById('form');\n        for (const elem of form.elements) {\n            validate(elem);\n        }\n\n        if (!form.checkValidity()) {\n            form.reportValidity();\n            return false;\n        }\n\n        const start = getUnixTime(new Date(startDate + \"T\" + startTime));\n        let end = getUnixTime(new Date(endDate + \"T\" + endTime));\n\n        // Make sure that end time is always AFTER start time\n        if (end === start) {\n            end = start + 1;\n        }\n\n        setLoading(true);\n        const data = new StreamData(wallet.publicKey.toBase58(), receiver, amount, start, end);\n        const success = await _createStream(data, connection, wallet, cluster, pda)\n        setLoading(false);\n\n        if (success) {\n            streamCreated(pda.publicKey.toBase58())\n            const fee = await connection.getMinimumBalanceForRentExemption(96)\n            setBalance(balance - amount - fee / LAMPORTS_PER_SOL);\n            addStream(pda.publicKey.toBase58(), data)\n        }\n    }\n\n    return (\n        <form onSubmit={createStream} id=\"form\">\n            <div className=\"my-4 grid gap-4 grid-cols-5 sm:grid-cols-2\">\n                <Amount onChange={setAmount} value={amount} max={balance}/>\n                <SelectToken/>\n                <Recipient onChange={setReceiver} value={receiver}/>\n                <DateTime\n                    title={START}\n                    date={startDate}\n                    updateDate={setStartDate}\n                    time={startTime}\n                    updateTime={setStartTime}\n                />\n                <DateTime\n                    title={END}\n                    date={endDate}\n                    updateDate={setEndDate}\n                    time={endTime}\n                    updateTime={setEndTime}\n                />\n            </div>\n            <Toggle enabled={vesting} setEnabled={setVesting} label=\"Vesting\"/>\n            <Vesting visible={vesting}/>\n            {wallet?.connected ?\n                <ButtonPrimary className=\"font-bold text-2xl my-5\"\n                               onClick={createStream}\n                               type=\"button\"\n                               disabled={loading}>Stream!</ButtonPrimary>\n                : <>\n                    <hr className=\"my-4 sm:hidden\"/>\n                    <SelectCluster/>\n                    <WalletPicker/>\n                </>}\n        </form>\n    );\n}\n","import {Address, ButtonPrimary, Link} from \"./index\";\nimport {getExplorerLink} from \"../utils/helpers\";\nimport {AIRDROP_AMOUNT, TX_FINALITY_CONFIRMED} from \"../constants\";\nimport {toast} from \"react-toastify\";\nimport {LAMPORTS_PER_SOL} from \"@solana/web3.js\";\nimport {Dispatch, SetStateAction, useEffect, useState} from \"react\";\nimport useStore from \"../Stores\"\nimport { CLUSTER_MAINNET } from \"../Stores/NetworkStore\"\n\nconst storeGetter = state => ({\n    balance: state.balance,\n    setBalance: state.setBalance,\n    isMainnet: state.cluster === CLUSTER_MAINNET,\n    connection: state.connection(),\n    wallet: state.wallet,\n    connectWallet: state.connectWallet,\n    disconnectWallet: state.disconnectWallet,\n    setWalletType: state.setWalletType,\n})\n\nexport default function Account({\n                                    loading,\n                                    setLoading\n                                }: { loading: boolean, setLoading: Dispatch<SetStateAction<boolean>> }) {\n\n    const [airdropTxSignature, setAirdropTxSignature] = useState(undefined)\n    const { connection, wallet, balance, setBalance, isMainnet, disconnectWallet, setWalletType } = useStore(storeGetter)\n\n    useEffect(() => {\n        if (airdropTxSignature) {\n            connection.confirmTransaction(airdropTxSignature, TX_FINALITY_CONFIRMED).then(\n                result => {\n                    if (result.value.err) {\n                        toast.error('Airdrop failed!')\n                    } else {\n                        setBalance(balance + AIRDROP_AMOUNT)\n                        toast.success(\"Airdrop confirmed. Balance updated!\")\n                    }\n                }\n            )\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [airdropTxSignature])\n\n    async function requestAirdrop() {\n        setLoading(true);\n        const signature = await connection.requestAirdrop(wallet.publicKey, AIRDROP_AMOUNT * LAMPORTS_PER_SOL);\n        setAirdropTxSignature(signature);\n        setLoading(false);\n        toast.success(\"Airdrop requested!\")\n    }\n\n    return (\n        <>\n            <div className=\"mb-4 text-white\">\n                <Link url={getExplorerLink('address', wallet?.publicKey?.toBase58())}\n                      title=\"My Wallet Address\"/>\n                <Address address={wallet?.publicKey?.toBase58()} className=\"block truncate\"/>\n            </div>\n            <div className=\"mb-4 clearfix text-white\">\n                <strong className=\"block\">Balance</strong>\n                <span>◎{Number(balance).toFixed(4)}</span>\n                <button\n                    type=\"button\"\n                    onClick={() => {\n                        disconnectWallet()\n                        setWalletType(null)\n                    }}\n                    className=\"float-right items-center px-2.5 py-1.5 shadow-sm text-xs  font-medium rounded bg-gray-500 hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\"\n                >\n                    Disconnect\n                </button>\n                { wallet?.connected &&\n                    <ButtonPrimary\n                        type=\"button\" onClick={requestAirdrop}\n                        className={\"float-right mr-2 px-2.5 py-1.5 text-xs my-0 rounded active:bg-white\" + (isMainnet ? \" hidden\" : \"\")}\n                        disabled={loading}\n                    >\n                        Gimme SOL!\n                    </ButtonPrimary>\n                }\n            </div>\n        </>\n    )\n}\n","import {CLUSTER_DEVNET, CLUSTER_MAINNET} from '../Stores/NetworkStore'\nimport useStore from \"../Stores\"\n\nconst networkStore = state => ({cluster: state.cluster, setCluster: state.setCluster})\n\nexport default function SelectCluster() {\n    const {cluster, setCluster} = useStore(networkStore)\n    return (\n        <div className=\"sm:absolute top-0 right-0 sm:p-4\">\n            <select\n                id=\"cluster\"\n                name=\"cluster\"\n                className=\"mt-1 text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                defaultValue={cluster}\n                onChange={e => setCluster(e.target.value)}\n            >\n                <option value={CLUSTER_MAINNET} disabled={true}>mainnet</option>\n                <option value={CLUSTER_DEVNET}>{CLUSTER_DEVNET}</option>\n                {/* handy for developers, but not needed for the end user */}\n                {/* <option value={CLUSTER_TESTNET}>{CLUSTER_TESTNET}</option> */}\n                {/* <option value={CLUSTER_LOCAL}>{CLUSTER_LOCAL}</option> */}\n            </select>\n        </div>\n    )\n}\n","import {XIcon} from '@heroicons/react/outline'\nimport {Component} from \"react\";\n\n//could be functional component, but we decided to let it manage its own state (open/close)\nexport default class Banner extends Component {\n    state = {\n        hidden: false\n    }\n\n    render() {\n        return (\n            <div className={`relative bg-primary ${this.state.hidden && \"hidden\"}`}>\n                <div className=\"max-w-7xl mx-auto py-3 px-3 sm:px-6 lg:px-8\">\n                    <div className=\"pr-16 sm:text-center sm:px-16\">\n                        <p className=\"font-small text-white\">\n                            <b>{this.props.title}</b>\n                            &nbsp;\n                            <span className=\"hidden lg:inline\">{this.props.message}</span>\n                        </p>\n                    </div>\n                    <div\n                        className=\"absolute inset-y-0 right-0 pt-1 pr-1 flex items-start sm:pt-1 sm:pr-2 sm:items-start\">\n                        <button type=\"button\" onClick={() => this.setState({hidden: true})}\n                                className=\"flex p-2 rounded-md hover:bg-primary focus:outline-none focus:ring-2 focus:ring-white\"\n                        >\n                            <span className=\"sr-only\">Dismiss</span>\n                            <XIcon className=\"h-6 w-6 text-white\"/>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import {useMemo, useEffect} from 'react'\nimport useStore from \"../Stores\"\nimport swal from \"sweetalert\"\nimport {\n    getPhantomWallet,\n    getSolflareWebWallet,\n    getSolflareWallet,\n    getSolletWallet,\n} from \"@solana/wallet-adapter-wallets\"\nimport ButtonPrimary from \"./ButtonPrimary\"\n\nconst storeGetter = state => ({\n    walletType: state.walletType,\n    setWalletType: state.setWalletType,\n    cluster: state.cluster,\n})\n\nconst div = document.createElement('div')\n\nconst addWalletOption = (walletType: Object) => {\n    const button = document.createElement('div')\n    const p = document.createElement('p')\n    const img = document.createElement('img')\n    img.src = walletType.icon\n    img.className = 'h-8 inline-block mr-4'\n    p.innerHTML = walletType.name\n    p.className = 'inline-block'\n    button.className = 'border-primary border cursor-pointer mb-4 p-4 text-primary rounded-md'\n    button.onclick = () => {\n        swal.setActionValue({cancel: walletType})\n        swal.close()\n    }\n    button.appendChild(img)\n    button.appendChild(p)\n    div.appendChild(button)\n}\n\nconst pickWallet = (walletTypes: Array, setWalletType: Function) => {\n    div.innerHTML = ''\n    for (const w of walletTypes) {\n        addWalletOption(w)\n    }\n    swal({buttons: {}, content: div, className: \"bg-gray-800\"})\n        .then(setWalletType)\n}\n\nlet walletInitialized = false\n\nexport default function WalletPicker() {\n    const {setWalletType, cluster} = useStore(storeGetter)\n    const walletTypes = useMemo(() => [\n            getPhantomWallet(),\n            getSolflareWebWallet({network: cluster}),\n            getSolflareWallet(),\n            getSolletWallet({network: cluster}),\n        ],\n        [cluster]\n    )\n\n    useEffect(\n        () => {\n            if (walletInitialized) {\n                return\n            }\n            walletInitialized = true\n\n            const type = localStorage.walletType\n            if (type) {\n                const restoredWalletType = walletTypes.find(w => w.name === type)\n                if (restoredWalletType) {\n                    setWalletType(restoredWalletType)\n                }\n            }\n        },\n        [setWalletType, walletTypes]\n    )\n    return <ButtonPrimary\n        className=\"font-bold text-2xl my-5\"\n        type=\"button\"\n        onClick={() => pickWallet(walletTypes, setWalletType)}\n    >\n        Connect\n    </ButtonPrimary>\n}\n","export default function Vesting({visible}: { visible: boolean }) {\n    return <div hidden={!visible} className=\"relative text-gray-400 -mx-2 p-2 rounded-md\">\n        <div className={`absolute text-primary bg-gray-900 opacity-60 top-0 bottom-0 left-0 right-0 z-10 block`}>\n        </div>\n        <label className=\"block mb-2 font-medium text-gray-100 capitalize\">COMING SOON™</label>\n        First <input type=\"number\" defaultValue={25}\n                     className=\"text-white p-0.5 bg-gray-800 border-primary w-8 inline border-black rounded-md focus:ring-secondary focus:border-secondary\"\n    /> % released at <input type=\"date\"\n                            className=\"text-white p-0.5 bg-gray-800 border-primary inline border-black rounded-md focus:ring-secondary focus:border-secondary\"/><br/>\n        and then <input type=\"number\" defaultValue={5}\n                        className=\"text-white py-0.5 px-1 bg-gray-800 border-primary inline w-5 border-black rounded-md focus:ring-secondary focus:border-secondary\"\n    /> % released each <input type=\"number\" defaultValue={2}\n                              className=\"text-white py-0.5 px-1 w-5 mt-4 bg-gray-800 border-primary inline border-black rounded-md focus:ring-secondary focus:border-secondary\"/>\n        &nbsp;<select\n        className=\"mt-1 text-white p-0.5 pr-7 bg-gray-800 border-primary w-26 rounded-md focus:ring-secondary focus:border-secondary\"\n        defaultValue=\"SOL\">\n        <option value=\"month\">months</option>\n    </select>\n        <br/>\n        <input type=\"checkbox\" readOnly={true} checked={true} className=\"text-primary w-6 h-6 rounded-sm\"/> <span\n        className=\"inline-block mt-4\">Transferable</span>\n    </div>;\n}","export default function EmptyStreams() {\n    return (<div className=\"mx-auto my-10 text-white text-center\">\n        <span>Payments, vesting schedules and streams will appear here.</span>\n        <br/>\n        <span>Start streaming!</span>\n    </div>)\n}","import EmptyStreams from \"../Components/EmptyStreams\";\nimport {_swal, getDecodedAccountData} from \"../utils/helpers\";\nimport {Stream} from \"../Components\";\nimport {_cancelStream, _withdrawStream} from \"../Actions\";\nimport {getUnixTime} from \"date-fns\";\nimport {ERR_NO_STREAM, STREAM_STATUS_CANCELED, TX_FINALITY_CONFIRMED} from \"../constants\";\nimport {LAMPORTS_PER_SOL, PublicKey} from \"@solana/web3.js\";\nimport useStore from \"../Stores\"\nimport {toast} from \"react-toastify\";\nimport {useEffect} from \"react\";\n\nconst storeGetter = state => ({\n    balance: state.balance,\n    setBalance: state.setBalance,\n    streams: state.streams,\n    addStream: state.addStream,\n    deleteStream: state.deleteStream,\n    clearStreams: state.clearStreams,\n    cluster: state.cluster,\n    wallet: state.wallet,\n    connection: state.connection(),\n})\n\nexport default function StreamsContainer() {\n    const {wallet, connection, balance, setBalance, streams, addStream, deleteStream, clearStreams, cluster,} = useStore(storeGetter)\n\n    //componentWillMount\n    useEffect(() => {\n        clearStreams()\n        const savedStreams = JSON.parse(localStorage.streams || '{}')\n        const newStreams = savedStreams?.[cluster]?.[wallet?.publicKey?.toBase58()] || {}\n        const streamID = window.location.hash.substring(1);\n\n        if (streamID) {\n            try {\n                new PublicKey(streamID);\n                newStreams[streamID] = undefined; // We're setting the data few lines below\n            } catch (e) {\n                toast.error(ERR_NO_STREAM)\n            }\n        }\n\n        for (const id in newStreams) {\n            if (newStreams.hasOwnProperty(id)) {\n                //first, the cleanup\n                let pk = undefined\n                try {\n                    pk = new PublicKey(id);\n                } catch (e) {\n                    toast.error(e.message + id)\n                    //removeStream(id, true);\n                }\n\n                if (pk) {\n                    connection.getAccountInfo(new PublicKey(id)).then(result => {\n                        if (result?.data) {\n                            addStream(id, getDecodedAccountData(result.data));\n                        } else {\n                            if (id === streamID) {\n                                toast.error(ERR_NO_STREAM)\n                            }\n                        }\n                    })\n                }\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    async function withdrawStream(id: string) {\n        const success = await _withdrawStream(id, streams[id], connection, wallet, cluster)\n        if (success) {\n            const newBalance = (await connection.getBalance(wallet.publicKey, TX_FINALITY_CONFIRMED)) / LAMPORTS_PER_SOL;\n            const streamData = await connection.getAccountInfo(new PublicKey(id), TX_FINALITY_CONFIRMED)\n            setBalance(newBalance)\n            addStream(id, getDecodedAccountData(streamData.data))\n        }\n    }\n\n    async function cancelStream(id: string) {\n        const {amount} = streams[id];\n        const now = new Date();\n        const oldBalance = balance;\n        const success = await _cancelStream(id, streams[id], connection, wallet, cluster)\n        if (success) {\n            const newBalance = (await connection.getBalance(wallet.publicKey, TX_FINALITY_CONFIRMED)) / LAMPORTS_PER_SOL;\n            const newWithdrawn = amount - (newBalance - oldBalance);\n            setBalance(newBalance)\n            addStream(\n                id,\n                {\n                    ...streams[id],\n                    withdrawn: newWithdrawn,\n                    canceled_at: getUnixTime(now),\n                    status: STREAM_STATUS_CANCELED\n                }\n            )\n        }\n    }\n\n    async function removeStream(id: string, skipPrompt?: boolean) {\n        if (!skipPrompt && await _swal()) {\n            deleteStream(id)\n        }\n    }\n\n    return Object.keys(streams).length > 0 ? (\n        Object.entries(streams)\n            .sort(([, stream1], [, stream2]) => stream2.start - stream1.start)\n            .map(([id, data]) => (\n                <Stream key={id} onStatusUpdate={(status) => addStream(id, {...streams[id], status})}\n                        onWithdraw={() => withdrawStream(id)} onCancel={() => cancelStream(id)}\n                        id={id} data={data} myAddress={wallet.publicKey.toBase58()}\n                        removeStream={() => removeStream(id)}/>\n            ))\n    ) : <EmptyStreams/>\n}\n","import {useState} from \"react\";\nimport {Account, CreateStreamForm, Curtain} from \"../Components\";\nimport StreamsList from \"../Components/StreamsList\";\nimport EmptyStreams from \"../Components/EmptyStreams\";\nimport useStore from \"../Stores\";\n\nconst storeGetter = state => state.wallet\n\nexport default function Main() {\n    const wallet = useStore(storeGetter)\n    const [loading, setLoading] = useState(false)\n\n    return (\n        <div className=\"mx-auto grid grid-cols-1 gap-16 max-w-lg xl:grid-cols-2 xl:max-w-5xl\">\n            <div className=\"mb-8\">\n                <Curtain visible={loading}/>\n                {wallet?.connected &&\n                <>\n                    <Account loading={loading} setLoading={setLoading}/>\n                    <hr/>\n                </>\n                }\n                <CreateStreamForm loading={loading} setLoading={setLoading}/>\n            </div>\n            <div>\n                <strong className=\"text-white text-center text-2xl block\">My Streams</strong>\n                {wallet?.connected ? <StreamsList/> : <EmptyStreams/>}\n            </div>\n        </div>\n    )\n}","import {Main} from \"./index\";\nimport {PRODUCT_MULTISIG, PRODUCT_PAYROLL, PRODUCT_STREAMS, PRODUCT_VESTING} from \"../constants\";\nimport {ButtonPrimary, Recipient, SelectToken} from \"../Components\";\nimport {ClockIcon, UploadIcon} from \"@heroicons/react/outline\";\nimport {CheckCircleIcon} from \"@heroicons/react/solid\";\n\nexport default function Products({product}: { product: string }) {\n    switch (product) {\n        case PRODUCT_STREAMS:\n        case PRODUCT_VESTING:\n            return (<Main/>)\n        case PRODUCT_PAYROLL:\n            return (<div className=\"mx-auto relative max-w-lg grid gap-2 xl:grid-cols-5 xl:max-w-2xl\">\n                <div\n                    className={`absolute text-primary bg-gray-900 opacity-60 top-0 bottom-0 left-0 right-0 z-10 block`}>\n                </div>\n                <ButtonPrimary className=\"col-span-5 block m-auto my-10 w-80\"\n                               children={<span>Upload CSV <UploadIcon className=\"inline w-6\"/></span>}/>\n                <div className=\"col-span-3\">\n                    <Recipient onChange={null} value=\"1337...c0de\"/>\n                </div>\n                <SelectToken/>\n                <div>\n                    <label htmlFor=\"amount\" className=\"block font-medium text-gray-100\">Amount</label>\n                    <input type=\"number\" value={Math.floor(Math.random() * 666) / 10}\n                           className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                    /></div>\n                <input value=\"reci...pient2\" type=\"text\"\n                       className=\"col-span-3 text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"/>\n                <select\n                    className=\"mt-1 text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                    defaultValue=\"SOL\">\n                    <option>SRM</option>\n                </select>\n                <input type=\"number\" value={Math.floor(Math.random() * 666) / 10}\n                       className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                />\n                <div className=\"text-white text-xl col-span-5 text-center\">...</div>\n\n                <input value=\"reci...pientN\" type=\"text\"\n                       className=\"col-span-3 text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"/>\n                <select\n                    className=\"mt-1 text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                    defaultValue=\"SOL\">\n                    <option>STRM</option>\n                </select>\n                <input type=\"number\" value={Math.floor(Math.random() * 666) / 10}\n                       className=\"text-white bg-gray-800 border-primary block w-full border-black rounded-md focus:ring-secondary focus:border-secondary\"\n                />\n            </div>)\n        case PRODUCT_MULTISIG:\n            return (<div className=\"mx-auto relative max-w-lg xl:max-w-xl\">\n                <div\n                    className={`absolute text-primary bg-gray-900 opacity-60 top-0 bottom-0 left-0 right-0 z-10 block`}>\n                </div>\n                <div className=\"text-white mb-4\">Treasury (<b>MyTr...easury</b>) sends 1 SOL to:</div>\n                <div className=\"col-span-3\">\n                    <Recipient onChange={null} value=\"reci...pient\"/>\n                    <hr/>\n                    <ul className=\"text-white mt-4\">\n                        <li>\n                            1. signature (<b>1337...code</b>) signed at {(new Date()).toLocaleString()}\n                            <CheckCircleIcon className=\"text-blue-200 w-6 inline\"/>\n                        </li>\n                        <li>\n                            2. signature — WAITING <ClockIcon className=\"text-red-200 w-6 inline\"/>\n                        </li>\n                        <li>\n                            3. signature — WAITING <ClockIcon className=\"text-red-200 w-6 inline\"/>\n                        </li>\n                        <li>\n                            Execution — WAITING <ClockIcon className=\"text-red-200 w-6 inline\"/>\n                        </li>\n                        <br/>\n                        <ButtonPrimary>Sign</ButtonPrimary>\n                    </ul>\n                </div>\n            </div>)\n        default:\n    }\n}","export default __webpack_public_path__ + \"static/media/logo.881e57ca.png\";","import {ToastContainer} from \"react-toastify\";\nimport {Products} from \"./Pages\";\nimport {Footer, Logo} from \"./Components\";\nimport logo from './logo.png'\nimport 'react-toastify/dist/ReactToastify.css';\nimport {useState} from \"react\";\nimport {useFormContext} from \"./Contexts/FormContext\";\nimport {PRODUCT_STREAMS, PRODUCT_VESTING, products} from \"./constants\";\n\nfunction App() {\n    const {setVesting} = useFormContext()\n    const [product, setProduct] = useState(PRODUCT_STREAMS)\n    return (\n        <div>\n            <div className={\"mx-auto bg-blend-darken px-4 my-4\"}>\n                <div className=\"text-center text-white mb-6\">\n                    {products.map(prod =>\n                        <span key={prod} onClick={() => {\n                            setVesting(prod === PRODUCT_VESTING);\n                            setProduct(prod)\n                        }}\n                              className={`cursor-pointer capitalize inline-block mx-4 \n                              ${prod === product ? 'text-white' : 'text-gray-400'}`}>\n                            {prod}\n                        </span>\n                    )}\n                </div>\n                <Logo src={logo}/>\n                <Products product={product}/>\n            </div>\n            <ToastContainer hideProgressBar position=\"bottom-left\" limit={5}/>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport {FormProvider} from \"./Contexts/FormContext\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <FormProvider>\n            <App/>\n        </FormProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n// reportWebVitals();\n","import {clusterApiUrl} from \"@solana/web3.js\"\n\nexport const CLUSTER_LOCAL = 'local'\nexport const CLUSTER_DEVNET = 'devnet'\nexport const CLUSTER_TESTNET = 'testnet'\nexport const CLUSTER_MAINNET = 'mainnet-beta'\n\nconst clusterUrls = {\n    [CLUSTER_LOCAL]: () => 'http://127.0.0.1:8899',\n    [CLUSTER_DEVNET]: () => clusterApiUrl(CLUSTER_DEVNET),\n    [CLUSTER_TESTNET]: () => clusterApiUrl(CLUSTER_TESTNET),\n    [CLUSTER_MAINNET]: () => clusterApiUrl(CLUSTER_MAINNET),\n}\n\nconst programIds = {\n    [CLUSTER_LOCAL]: () => prompt(\"Program ID?\"),\n    [CLUSTER_DEVNET]: () => \"H977mPPrgznZR4gFe2bZL9y1XSDbQUAAMvxZ48PJ3ExB\",\n    [CLUSTER_TESTNET]: () => \"H977mPPrgznZR4gFe2bZL9y1XSDbQUAAMvxZ48PJ3ExB\",\n    [CLUSTER_MAINNET]: () => null, // TODO: publish the program to mainnet\n}\n\nconst useNetworkStore = (set: Function, get: Function) => ({\n    // state\n    cluster: localStorage.cluster || CLUSTER_DEVNET,\n    programId: programIds[localStorage.cluster || CLUSTER_DEVNET](),\n\n    // actions\n    clusterUrl: () => clusterUrls[get().cluster](),\n    explorerUrl: () => {\n        const cluster = get().cluster\n        return cluster === CLUSTER_LOCAL ? `custom&customUrl=${encodeURIComponent(get().clusterUrl)}` : cluster\n    },\n    setCluster: (cluster: string) => {\n        get().persistStoreToLocalStorage()\n        const programId = programIds[cluster]()\n        if (programId) {\n            set({cluster, programId})\n        }\n        else {\n            set({cluster: CLUSTER_DEVNET, programId: programIds[CLUSTER_DEVNET]()})\n        }\n    }\n})\n\nexport default useNetworkStore","import {ExternalLinkIcon} from \"@heroicons/react/outline\";\n\nexport default function ToastrLink(props: { url: string, urlText: string, nonUrlText: string }) {\n    const {url, urlText, nonUrlText} = props;\n    return <span>{nonUrlText}<br/>\n        <a className=\"font-bold\"\n           href={url} rel=\"noopener noreferrer\"\n           target=\"_blank\">{urlText}<ExternalLinkIcon className=\"ml-1 w-4 h-4 inline\"/>\n        </a>\n    </span>\n}","import {toast} from \"react-toastify\";\nimport {Connection, Keypair, Transaction} from \"@solana/web3.js\";\nimport ToastrLink from \"../Components/ToastrLink\";\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport {INSTRUCTION_CREATE_STREAM, TX_FINALITY_CONFIRMED} from \"../constants\";\nimport {getExplorerLink} from \"../utils/helpers\";\n\nexport default async function sendTransaction(type: number, transaction: Transaction, connection: Connection, wallet: Wallet, network?: string, pda?: Keypair) {\n    try {\n        transaction.recentBlockhash = (await connection.getRecentBlockhash()).blockhash;\n        toast.info('Please confirm transaction in your wallet.', {autoClose: 10000});\n        transaction.feePayer = wallet.publicKey;\n\n        if (type === INSTRUCTION_CREATE_STREAM) {\n            transaction.partialSign(pda);\n        }\n\n        const signed = await wallet.signTransaction(transaction);\n        const signature = await connection.sendRawTransaction(signed.serialize());\n        toast.dismiss();\n        toast.info('Submitted transaction. Awaiting confirmation...', {autoClose: 10000});\n\n        // can use 'finalized' which gives 100% certainty, but requires much longer waiting.\n        const finality = TX_FINALITY_CONFIRMED\n        await connection.confirmTransaction(signature, finality)\n        const url = getExplorerLink('tx', signature)\n        toast.dismiss();\n        toast.success(\n            <ToastrLink\n                url={url}\n                urlText=\"View on explorer\"\n                nonUrlText={`Transaction ${finality}!` + (finality === TX_FINALITY_CONFIRMED ? \" Please allow it few seconds to finalize.\" : \"\")}\n            />,\n            {autoClose: 15000, closeOnClick: true}\n        )\n        return true;\n    } catch (e) {\n        console.warn(e);\n        //todo log these errors somewhere for our reference\n        toast.error('Error: ' + e.message);\n        return false;\n    }\n}\n","export const STREAMFLOW_ACCOUNT_ID = \"61q5sBk7ZtjWJtRxnbhgKjUP9cxvdzmxcGRFxCJhQhdN\";","export * from './ids';\n\nexport const AIRDROP_AMOUNT = 1; // 1 SOL is the cap on the testnet\n\nexport const TX_FINALITY_CONFIRMED = \"confirmed\";\nexport const TX_FINALITY_FINALIZED = \"finalized\";\n\nexport const INSTRUCTION_CREATE_STREAM = 0;\nexport const INSTRUCTION_WITHDRAW_STREAM = 1;\nexport const INSTRUCTION_CANCEL_STREAM = 2;\n\nexport const EXPLORER_TYPE_TX = \"tx\";\nexport const EXPLORER_TYPE_ADDR = \"address\";\n\nexport const DATE_FORMAT = \"yyyy-MM-dd\";\nexport const TIME_FORMAT = \"HH:mm\";\nexport const TIME_SUFFIX = \"T00:00\";\n\nexport const START = \"start\";\nexport const END = \"end\";\n\nexport const STREAM_STATUS_SCHEDULED = \"scheduled\";\nexport const STREAM_STATUS_STREAMING = \"streaming\";\nexport const STREAM_STATUS_COMPLETE = \"complete\";\nexport const STREAM_STATUS_CANCELED = \"canceled\";\n\n//might move to a separate class if it becomes clunky\nexport const ERR_NO_STREAM = \"Specified stream doesn't exist. Please double check with the sender.\"\n\nexport const PRODUCT_STREAMS = \"streams\"\nexport const PRODUCT_VESTING = \"vesting\"\nexport const PRODUCT_PAYROLL = \"payroll\"\nexport const PRODUCT_MULTISIG = \"multisig\"\n\nexport const products = [PRODUCT_STREAMS, PRODUCT_VESTING, PRODUCT_PAYROLL, PRODUCT_MULTISIG]\n\n//don't forget to update tailwind.config.js to safelist dynamically generated classes\nexport const STREAM_STATUS_COLOR = {\n    [STREAM_STATUS_SCHEDULED]: 'gray', // now < start\n    [STREAM_STATUS_STREAMING]: 'blue', // start <= now < end\n    [STREAM_STATUS_COMPLETE]: 'blue', //now >= end;\n    [STREAM_STATUS_CANCELED]: 'red',\n}\n"],"sourceRoot":""}